/* 
mzMl v1.0.0
A collection of TypeScript-based ML helpers.
https://github.com/mzusin/mz-ml
Copyright (c) 2023-present, Miriam Zusin          
*/
var f=Object.defineProperty;var m=(r,t,i)=>t in r?f(r,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[t]=i;var l=(r,t,i)=>(m(r,typeof t!="symbol"?t+"":t,i),i);var b=class{constructor(t){l(this,"options");l(this,"m");l(this,"b");this.options=t,this.m=0,this.b=0}shuffle(){for(let t=this.options.points.length-1;t>0;t--){let i=Math.floor(Math.random()*(t+1));[this.options.points[t],this.options.points[i]]=[this.options.points[i],this.options.points[t]]}}gradientDescent(t,i){let n=0,s=0,e=this.options.points.length;for(let h=0;h<e;h++){let[c,p]=this.options.points[h],d=t*c+i,u=-2/e*(p-d);n+=c*u,s+=u}let a=t-this.options.learningRate*n,o=i-this.options.learningRate*s;return[a,o]}stochasticGradientDescent(t,i){let n=this.m*t+this.b,s=i-n,e=-2*t*s,a=-2*s,o=this.m-this.options.learningRate*e,h=this.b-this.options.learningRate*a;return[o,h]}miniBatchGradientDescent(t){let i=0,n=0,s=t.length;for(let[o,h]of t){let c=this.m*o+this.b,p=h-c;i+=-2*o*p,n+=-2*p}let e=this.m-this.options.learningRate/s*i,a=this.b-this.options.learningRate/s*n;return[e,a]}train(){var i;let t=(i=this.options.batchSize)!=null?i:this.options.points.length;for(let n=0;n<this.options.epochs;n++)switch(this.options.optimization){case 1:{this.options.shuffle&&this.shuffle();for(let[s,e]of this.options.points){let[a,o]=this.stochasticGradientDescent(s,e);typeof this.options.epochsCallback=="function"&&this.options.epochsCallback(n,this.options.epochs,a,o),this.m=a,this.b=o}break}case 2:{this.options.shuffle&&this.shuffle();for(let s=0;s<this.options.points.length;s+=t){let e=this.options.points.slice(s,s+t),[a,o]=this.miniBatchGradientDescent(e);typeof this.options.epochsCallback=="function"&&this.options.epochsCallback(n,this.options.epochs,a,o),this.m=a,this.b=o}break}default:{let[s,e]=this.gradientDescent(this.m,this.b);this.options.epochsCallback&&typeof this.options.epochsCallback=="function"&&this.options.epochsCallback(n,this.options.epochs,s,e),this.m=s,this.b=e;break}}return[this.m,this.b]}predict(t){return this.m*t+this.b}};export{b as LinearRegression};
//# sourceMappingURL=mz-ml.esm.js.map
