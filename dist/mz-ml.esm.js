/* 
mzMl v1.0.0
A collection of TypeScript-based ML helpers.
https://github.com/mzusin/mz-ml
Copyright (c) 2023-present, Miriam Zusin          
*/
var g=Object.defineProperty;var c=Math.pow,d=(f,e,t)=>e in f?g(f,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):f[e]=t;var o=(f,e,t)=>(d(f,typeof e!="symbol"?e+"":e,t),t);var m=class{constructor(e){o(this,"options");o(this,"weights");o(this,"bias");o(this,"features");o(this,"labels");o(this,"n");o(this,"batchSize");o(this,"pearson",()=>{if(this.features.length<=0||this.labels.length<=0)return[];let e=[],t=this.labels.reduce((s,i)=>s+i,0)/this.labels.length;for(let s=0;s<this.n;s++){let i=0,n=0,a=0,r=this.features.map(h=>h[s]),l=r.reduce((h,u)=>h+u,0)/r.length;for(let h=0;h<this.features.length;h++){let u=this.features[h][s],b=this.labels[h];i+=(u-l)*(b-t),n+=c(u-l,2),a+=c(b-t,2)}e.push(n===0||a===0?0:i/Math.sqrt(n*a))}return e});var t;if(this.options=e,this.features=[...this.options.features],this.labels=[...this.options.labels],this.n=this.features.length>0?this.features[0].length:0,!this.validateInput())throw new Error("The input is not valid. Number of features should match the number of labels, and all features should have the same size.");this.weights=m.initZeroArray(this.n),this.weights.length=this.n,this.weights.fill(0),this.bias=0,this.batchSize=(t=this.options.batchSize)!=null?t:this.features.length}validateInput(){if(this.features.length<=0||this.features.length!==this.labels.length)return!1;let e=this.features[0].length;for(let t of this.features)if(t.length!==e)return!1;return!0}static initZeroArray(e){let t=[];return t.length=e,t.fill(0),t}shuffle(){let e=[];for(let t=0;t<this.n;t++)e.push(t);for(let t=this.features.length-1;t>0;t--){let s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}for(let t=this.features.length-1;t>0;t--)[this.features[t],this.features[e[t]]]=[this.features[e[t]],this.features[t]],[this.labels[t],this.labels[e[t]]]=[this.labels[e[t]],this.labels[t]]}gradientDescent(e,t){let s=m.initZeroArray(this.n),i=0;for(let r=0;r<e.length;r++){let l=e[r],h=t[r],u=this.predict(l),b=h-u;for(let p=0;p<this.n;p++)s[p]+=-2*l[p]*b;i+=-2*b}let n=[];for(let r=0;r<this.weights.length;r++){let h=this.weights[r]-this.options.learningRate/this.batchSize*s[r];n.push(h)}let a=this.bias-this.options.learningRate/this.batchSize*i;return[n,a]}fit(){let e=performance.now();for(let t=0;t<this.options.epochs;t++){this.options.shuffle&&this.shuffle();for(let s=0;s<this.features.length;s+=this.batchSize){let i=this.features.slice(s,s+this.batchSize),n=this.labels.slice(s,s+this.batchSize),[a,r]=this.gradientDescent(i,n);if(typeof this.options.epochsCallback=="function"){let l=performance.now();this.options.epochsCallback({epoch:t,epochsCount:this.options.epochs,newWeights:a,newBias:r,time:l-e})}this.weights=a,this.bias=r}}return[this.weights,this.bias]}predict(e,t){if(e.length!==this.weights.length)throw new Error("Number of features does not match the number of weights.");let s=performance.now(),i=this.bias;for(let n=0;n<e.length;n++)i+=e[n]*this.weights[n];return t&&console.log(`Prediction = ${i}, ${performance.now()-s} ms`),i}predictBatch(e,t){let s=[],i=performance.now();for(let n of e)s.push(this.predict(n));return t&&console.log(`Predictions = ${s}, ${performance.now()-i} ms`),s}rSquared(){let e=0,t=0,s=this.labels.length<=0?0:this.labels.reduce((i,n)=>i+n)/this.labels.length;for(let i=0;i<this.features.length;i++){let n=this.labels[i],a=this.predict(this.features[i]);e+=c(n-a,2),t+=c(n-s,2)}return 1-e/t}meanSquaredError(){if(this.features.length<=0)return 0;let e=0;for(let t=0;t<this.features.length;t++){let s=this.labels[t],i=this.predict(this.features[t]);e+=c(s-i,2)}return e/=this.features.length,e}};export{m as LinearRegression};
//# sourceMappingURL=mz-ml.esm.js.map
