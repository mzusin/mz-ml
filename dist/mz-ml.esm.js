/* 
mzMl v1.0.0
A collection of TypeScript-based ML helpers.
https://github.com/mzusin/mz-ml
Copyright (c) 2023-present, Miriam Zusin          
*/
var g=Object.defineProperty;var f=Math.pow,d=(c,t,e)=>t in c?g(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var o=(c,t,e)=>(d(c,typeof t!="symbol"?t+"":t,e),e);var m=class{constructor(t){o(this,"options");o(this,"weights");o(this,"bias");o(this,"features");o(this,"labels");o(this,"featuresSize");o(this,"batchSize");o(this,"pearson",()=>{if(this.features.length<=0||this.labels.length<=0)return[];let t=[],e=this.labels.reduce((s,i)=>s+i,0)/this.labels.length;for(let s=0;s<this.featuresSize;s++){let i=0,r=0,a=0,n=this.features.map(h=>h[s]),l=n.reduce((h,u)=>h+u,0)/n.length;for(let h=0;h<this.features.length;h++){let u=this.features[h][s],b=this.labels[h];i+=(u-l)*(b-e),r+=f(u-l,2),a+=f(b-e,2)}t.push(r===0||a===0?0:i/Math.sqrt(r*a))}return t});var e;if(this.options=t,this.features=[...this.options.features],this.labels=[...this.options.labels],this.featuresSize=this.features.length>0?this.features[0].length:0,!this.validateInput())throw new Error("The input is not valid. Number of features should match the number of labels, and all features should have the same size.");this.weights=m.initZeroArray(this.featuresSize),this.bias=0,this.batchSize=(e=this.options.batchSize)!=null?e:this.features.length}validateInput(){if(this.features.length<=0||this.features.length!==this.labels.length)return!1;let t=this.features[0].length;for(let e of this.features)if(e.length!==t)return!1;return!0}static initZeroArray(t){let e=[];return e.length=t,e.fill(0),e}shuffle(){let t=[];for(let e=0;e<this.featuresSize;e++)t.push(e);for(let e=this.features.length-1;e>0;e--){let s=Math.floor(Math.random()*(e+1));[t[e],t[s]]=[t[s],t[e]]}for(let e=this.features.length-1;e>0;e--)[this.features[e],this.features[t[e]]]=[this.features[t[e]],this.features[e]],[this.labels[e],this.labels[t[e]]]=[this.labels[t[e]],this.labels[e]]}gradientDescent(t,e){let s=m.initZeroArray(this.featuresSize),i=0;for(let n=0;n<t.length;n++){let l=t[n],h=e[n],u=this.predict(l),b=h-u;for(let p=0;p<this.featuresSize;p++)s[p]+=-2*l[p]*b;i+=-2*b}let r=[];for(let n=0;n<this.weights.length;n++){let h=this.weights[n]-this.options.learningRate/this.batchSize*s[n];r.push(h)}let a=this.bias-this.options.learningRate/this.batchSize*i;return[r,a]}fit(){let t=performance.now();for(let e=0;e<this.options.epochs;e++){this.options.shuffle&&this.shuffle();for(let s=0;s<this.features.length;s+=this.batchSize){let i=this.features.slice(s,s+this.batchSize),r=this.labels.slice(s,s+this.batchSize),[a,n]=this.gradientDescent(i,r);if(typeof this.options.epochsCallback=="function"){let l=performance.now();this.options.epochsCallback({epoch:e,epochsCount:this.options.epochs,newWeights:a,newBias:n,time:l-t})}this.weights=a,this.bias=n}}return console.log("------------",Math.fround),[this.weights,this.bias]}predict(t,e){if(t.length!==this.weights.length)throw new Error("Number of features does not match the number of weights.");let s=performance.now(),i=this.bias;for(let r=0;r<t.length;r++)i+=t[r]*this.weights[r];return e&&console.log(`Prediction = ${i}, ${performance.now()-s} ms`),i}predictBatch(t,e){let s=[],i=performance.now();for(let r of t)s.push(this.predict(r));return e&&console.log(`Predictions = ${s}, ${performance.now()-i} ms`),s}rSquared(){let t=0,e=0,s=this.labels.length<=0?0:this.labels.reduce((i,r)=>i+r)/this.labels.length;for(let i=0;i<this.features.length;i++){let r=this.labels[i],a=this.predict(this.features[i]);t+=f(r-a,2),e+=f(r-s,2)}return 1-t/e}meanSquaredError(){if(this.features.length<=0)return 0;let t=0;for(let e=0;e<this.features.length;e++){let s=this.labels[e],i=this.predict(this.features[e]);t+=f(s-i,2)}return t/=this.features.length,t}};export{m as LinearRegression};
//# sourceMappingURL=mz-ml.esm.js.map
